/**
 * Type definitions for User Profile Management System
 * These interfaces define the data structures used throughout the application
 * and match the PostgreSQL database schema defined in Prisma
 */

/*
Expected PostgreSQL Schema:
CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  full_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  phone_number VARCHAR(20),
  bio TEXT,
  avatar_url VARCHAR(500),
  date_of_birth DATE,
  location VARCHAR(255),
  created_at TIMESTAMP DEFAULT now(),
  updated_at TIMESTAMP DEFAULT now()
);
*/

/**
 * Complete User object as stored in database
 * Includes all fields with generated ID and timestamps
 */
export interface User {
  id: string;                    // UUID generated by database
  fullName: string;              // User's full name (required)
  email: string;                 // User's email address (required, unique)
  phoneNumber?: string;          // Optional phone number
  bio?: string;                  // Optional biography/description
  avatarUrl?: string;            // Optional profile picture URL
  dateOfBirth?: string;          // Optional birth date (ISO string format)
  location?: string;             // Optional location/address
  createdAt: string;             // Timestamp when user was created (ISO string)
  updatedAt: string;             // Timestamp when user was last updated (ISO string)
}

/**
 * User form data interface
 * Used for creating and updating users (excludes generated fields)
 */
export interface UserFormData {
  fullName: string;              // Required: User's full name
  email: string;                 // Required: User's email address
  phoneNumber: string;           // Phone number (can be empty string)
  bio: string;                   // Biography/description (can be empty string)
  avatarUrl: string;             // Profile picture URL (can be empty string)
  dateOfBirth: string;           // Birth date in YYYY-MM-DD format (can be empty string)
  location: string;              // Location/address (can be empty string)
}

/**
 * Form validation errors
 * Maps field names to error messages for form validation
 */
export interface FormErrors {
  fullName?: string;             // Full name validation error
  email?: string;                // Email validation error
  phoneNumber?: string;          // Phone number validation error
  bio?: string;                  // Bio validation error
  dateOfBirth?: string;          // Date of birth validation error
  location?: string;             // Location validation error
  avatar?: string;               // Avatar/image validation error
}

/**
 * Standardized API response wrapper
 * Provides consistent response format for all API operations
 */
export interface ApiResponse<T> {
  data: T;                       // The actual response data (type varies by endpoint)
  success: boolean;              // Whether the operation was successful
  message: string;               // Human-readable message about the operation result
}

/**
 * Notification types for user feedback
 * Used to categorize different types of user notifications
 */
export type NotificationType = 'success' | 'error' | 'info' | 'warning';

/**
 * Notification object for displaying user feedback
 * Used by the notification system to show temporary messages
 */
export interface Notification {
  id: string;                    // Unique identifier for the notification
  type: NotificationType;        // Type of notification (affects styling)
  message: string;               // The message to display to the user
  duration?: number;             // Optional: how long to show the notification (ms)
}